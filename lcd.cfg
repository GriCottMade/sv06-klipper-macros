# Copyright (C) 2022 Justin Schuh <code@justinschuh.com>
#
# This file may be distributed under the terms of the GNU GPLv3 license.

################################################################################
# Existing menu refinements.
################################################################################

# Hide unused menus

[menu __main __octoprint]
type: list
name: OctoPrint
enable: false

[menu __main __sdcard]
type: list
enable: false
name: SD Card



# Require confirmation for anything that would abort an in-progress print.

# Steppers off
[menu __main __control]
name: control
type: list
enable: false

[menu __main __control __disable]
type: command
name: Steppers off
enable: false
gcode:
  M84
  M18

[menu __main __control __disable_printing]
type: list
index: 3
enable: false
name: Steppers off

[menu __my_main __control __disable_printing __confirm]
type: command
name: Confirm steppers off
gcode:
  M84
  M18
  {menu.back()}

# Add a park menu item.
[menu __main __control __park]
type: command
name: Park toolhead
enable: false
index: 1
gcode:
  G28 O ; Lazy home first.
  PARK

# Octoprint abort
[menu __main __octoprint __abort]
type: list
enable: {printer.idle_timeout.state == "Printing"}
name: Abort printing

[menu __main __octoprint __abort __confirm]
type: command
name: Confirm abort printing
gcode:
  {action_respond_info('action:cancel')}
  {menu.back()}

# SD card cancel
[menu __main __sdcard __cancel]
type: list
enable: {('virtual_sdcard' in printer) and
         (printer.print_stats.state == "printing" or
          printer.print_stats.state == "paused")}
name: Cancel printing

[menu __main __sdcard __cancel __confirm]
type: command
name: Confirm cancel printing
gcode:
  {% if 'pause_resume' in printer %}
    CANCEL_PRINT
  {% else %}
    M25
    M27
    M26 S0
    TURN_OFF_HEATERS
    G91
    G0 Z{(printer.toolhead.position.z, printer.toolhead.axis_maximum.z - 5)|min
        } F1000
    G90
  {% endif %}
  {menu.back()}

# Extra setup menu options

# Shutdown and reboot
[menu __main __system]
type: list
index: 2
name: System

[menu __main __system __power]
type: command
index: 2
name: Turn Off
enable: true
gcode: 
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=POWER_OFF_PRINTER_CHECK DURATION=30

[menu __main __system __reboot]
type: command
name: Reboot host
gcode:
  M117 Rebooting host
  M118 Rebooting host
  {menu.exit()}
  G4 S2 ; Let the user see the console message.
  {action_call_remote_method("reboot_machine")} ; Try Moonraker.
  G4 S1 ; give Moonraker a chance to finish.
  {action_respond_info('action:poweroff')} ; Try Octoprint.

[menu __main __system __shutdown]
type: command
name: Shutdown host
gcode:
  M117 Shutting down
  M118 Shutting down
  {menu.exit()}
  G4 S2 ; Let the user see the console message.
  {action_call_remote_method("shutdown_machine")} ; Try Moonraker.
  G4 S1 ; give Moonraker a chance to finish.
  {action_respond_info('action:poweroff')} ; Try Octoprint.



[menu __main __pause]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Pause printing
gcode:
    {% if "pause_resume" in printer %}
        PAUSE
    {% else %}
        {action_respond_info('action:pause')}
    {% endif %}

[menu __main __resume]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Resume printing
gcode:
    {% if "pause_resume" in printer %}
        RESUME
    {% else %}
        {action_respond_info('action:resume')}
    {% endif %}

[menu __main __load]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Load Filament
gcode:
  LOAD_FILAMENT

[menu __main __unload]
type: command
enable: {not printer.idle_timeout.state == "Printing"}
name: Unload Filament
gcode:
  UNLOAD_FILAMENT

[menu __main __abort]
type: command
enable: {printer.idle_timeout.state == "Printing"}
name: Abort printing
gcode:
    {% if 'pause_resume' in printer %}
        CANCEL_PRINT
    {% else %}
        {action_respond_info('action:cancel')}
    {% endif %}

  

################################################################################
# Replace filament loading with our own macros.
################################################################################

[menu __main __filament]
type: list
name: Filament
index: 1
enable: {printer.idle_timeout.state != "Printing" or
         printer.pause_resume.is_paused}

# Hide the old load/unload commands.
[menu __main __filament __loadf]
type: command
name: Load Fil. fast
enable: False

[menu __main __filament __loads]
type: command
name: Load Fil. slow
enable: False

[menu __main __filament __unloadf]
type: command
name: Unload Fil.fast
enable: False

[menu __main __filament __unloads]
type: command
name: Unload Fil.slow
enable: False

# Add new load/unload using our macros.
[menu __main __filament __load]
type: command
index: 1
name: Load Filament
gcode:
  LOAD_FILAMENT

[menu __main __filament __unload]
type: command
index: 2
name: Unload Filament
gcode:
  UNLOAD_FILAMENT

[menu __main __filament __feed]
type: input
name: Feed: {'%.1f' % menu.input}
input: 0.0
input_min: -50.0
input_max: 50.0
input_step: 1.0
gcode:
  SAVE_GCODE_STATE NAME=_KM_FILAMENT_LOAD
  M83
  G1 E{'%.1f' % menu.input
   } F{printer["gcode_macro _km_globals"].load_priming_speed}
  RESTORE_GCODE_STATE NAME=_KM_FILAMENT_LOAD



################################################################################
# Heater overrides.
################################################################################

### menu temperature ###

# Hide the original menu
[menu __main __temp]
type: list
name: Temperature
enable: False


